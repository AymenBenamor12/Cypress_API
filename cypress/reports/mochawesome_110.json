{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-12-12T22:19:35.191Z",
    "end": "2024-12-12T22:19:35.381Z",
    "duration": 190,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4be2dd37-8a4e-4373-a0f0-9412dc885527",
      "title": "",
      "fullFile": "cypress\\e2e\\APITesting\\PostCalls.cy.js",
      "file": "cypress\\e2e\\APITesting\\PostCalls.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "df4b20fd-b739-45cf-80af-61a4ea0222ad",
          "title": "api testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Appraoch3-using fixture",
              "fullTitle": "api testing Appraoch3-using fixture",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('tourist').then(myfixture => {\n  const requestBody = myfixture;\n  cy.request({\n    method: 'POST',\n    url: 'https://jsonplaceholder.typicode.com/posts',\n    body: requestBody\n  }).then(response => {\n    expect(response.status).to.equal(201);\n    expect(response.body.title).to.equal(requestBody.title);\n    expect(response.body.body).to.equal(requestBody.body);\n    expect(response.body.userId).to.equal(requestBody.userId);\n    // autre validation\n    expect(response.body).has.property('title', requestBody.title);\n    expect(response.body).to.have.property('body', requestBody.body);\n  });\n});",
              "err": {},
              "uuid": "e7b78e20-49f6-44c8-8401-7cd0e699ee56",
              "parentUUID": "df4b20fd-b739-45cf-80af-61a4ea0222ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e7b78e20-49f6-44c8-8401-7cd0e699ee56"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 166,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}